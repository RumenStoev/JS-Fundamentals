let element  = [1,2,3,4,5,6,7,8,8];


let result = element.reduce((accumulator,currentValue,index) => {
      if(!accumulator[currentValue]) {
          accumulator[currentValue] = 1
      } else {
          accumulator[currentValue]++
      }
      return accumulator
},{})

console.log(result)


->{ '1': 1, '2': 1, '3': 1, '4': 1, '5': 1, '6': 1, '7': 1, '8': 2 }  //check the repeating numbers


const data = [
    {a: 'happy', b: 'robin', c: ['blue','green']},
    {a: 'tired', b: 'panther', c: ['green','black','orange','blue']},
    {a: 'sad', b: 'goldfish', c: ['green','red']}
];


let result = data.reduce((accumulator,currentValue,index) => {
        currentValue.c.forEach(x => {
            accumulator.push(x)
        })
    return accumulator
},[])

console.log(result)
->[
  'blue',   'green',
  'green',  'black',
  'orange', 'blue',
  'green',  'red'
  ]
  
  const data = [
    {a: 'happy', b: 'robin', c: ['blue','green']},
    {a: 'tired', b: 'panther', c: ['green','black','orange','blue']},
    {a: 'sad', b: 'goldfish', c: ['green','red']}
];


let result = data.reduce((accumulator,currentValue,index) => {
        currentValue.c.forEach((x) => {
            if(accumulator.indexOf(x) === -1) {
                accumulator.push(x)
            }
        })
    return accumulator
},[])

console.log(result)
->[ 'blue', 'green', 'black', 'orange', 'red' ]
